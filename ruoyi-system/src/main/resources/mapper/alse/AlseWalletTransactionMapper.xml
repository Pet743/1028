<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.alse.mapper.AlseWalletTransactionMapper">

    <resultMap type="AlseWalletTransaction" id="AlseWalletTransactionResult">
        <result property="transactionId"    column="transaction_id"    />
        <result property="userId"    column="user_id"    />
        <result property="username"    column="username"    />
        <result property="transactionAmount"    column="transaction_amount"    />
        <result property="incomeAmount"    column="income_amount"    />
        <result property="expenseAmount"    column="expense_amount"    />
        <result property="paymentMethod"    column="payment_method"    />
        <result property="transactionType"    column="transaction_type"    />
        <result property="transactionTime"    column="transaction_time"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectAlseWalletTransactionVo">
        select transaction_id, user_id, username, transaction_amount, income_amount, expense_amount, payment_method, transaction_type, transaction_time, status, create_by, create_time, update_by, update_time, remark from alse_wallet_transaction
    </sql>

    <select id="selectAlseWalletTransactionList" parameterType="AlseWalletTransaction" resultMap="AlseWalletTransactionResult">
        <include refid="selectAlseWalletTransactionVo"/>
        <where>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="username != null  and username != ''"> and username like concat('%', #{username}, '%')</if>
            <if test="transactionAmount != null "> and transaction_amount = #{transactionAmount}</if>
            <if test="incomeAmount != null "> and income_amount = #{incomeAmount}</if>
            <if test="expenseAmount != null "> and expense_amount = #{expenseAmount}</if>
            <if test="paymentMethod != null "> and payment_method = #{paymentMethod}</if>
            <if test="transactionType != null "> and transaction_type = #{transactionType}</if>
            <if test="transactionTime != null "> and transaction_time = #{transactionTime}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="params.beginTransactionTime != null and params.beginTransactionTime != ''">
                and transaction_time &gt;= #{params.beginTransactionTime}
            </if>
            <if test="params.endTransactionTime != null and params.endTransactionTime != ''">
                and transaction_time &lt;= #{params.endTransactionTime}
            </if>
        </where>
    </select>

    <select id="selectWalletTransactionByCategory" parameterType="java.util.Map" resultMap="AlseWalletTransactionResult">
        <include refid="selectAlseWalletTransactionVo"/>
        <where>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
            <if test="username != null and username != ''">
                AND username like concat('%', #{username}, '%')
            </if>
            <if test="paymentMethod != null">
                AND payment_method = #{paymentMethod}
            </if>
            <if test="transactionType != null">
                AND transaction_type = #{transactionType}
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="beginTransactionTime != null">
                AND transaction_time &gt;= #{beginTransactionTime}
            </if>
            <if test="endTransactionTime != null">
                AND transaction_time &lt;= #{endTransactionTime}
            </if>
            <!-- 收入筛选 -->
            <if test="transactionCategory != null">
                <choose>
                    <when test="transactionCategory == 1">
                        AND income_amount > 0
                    </when>
                    <when test="transactionCategory == 2">
                        AND expense_amount > 0
                    </when>
                </choose>
            </if>
        </where>
        ORDER BY transaction_time DESC
    </select>

    <select id="selectAlseWalletTransactionByTransactionId" parameterType="Long" resultMap="AlseWalletTransactionResult">
        <include refid="selectAlseWalletTransactionVo"/>
        where transaction_id = #{transactionId}
    </select>

    <insert id="insertAlseWalletTransaction" parameterType="AlseWalletTransaction" useGeneratedKeys="true" keyProperty="transactionId">
        insert into alse_wallet_transaction
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="username != null and username != ''">username,</if>
            <if test="transactionAmount != null">transaction_amount,</if>
            <if test="incomeAmount != null">income_amount,</if>
            <if test="expenseAmount != null">expense_amount,</if>
            <if test="paymentMethod != null">payment_method,</if>
            <if test="transactionType != null">transaction_type,</if>
            <if test="transactionTime != null">transaction_time,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="username != null and username != ''">#{username},</if>
            <if test="transactionAmount != null">#{transactionAmount},</if>
            <if test="incomeAmount != null">#{incomeAmount},</if>
            <if test="expenseAmount != null">#{expenseAmount},</if>
            <if test="paymentMethod != null">#{paymentMethod},</if>
            <if test="transactionType != null">#{transactionType},</if>
            <if test="transactionTime != null">#{transactionTime},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <update id="updateAlseWalletTransaction" parameterType="AlseWalletTransaction">
        update alse_wallet_transaction
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="transactionAmount != null">transaction_amount = #{transactionAmount},</if>
            <if test="incomeAmount != null">income_amount = #{incomeAmount},</if>
            <if test="expenseAmount != null">expense_amount = #{expenseAmount},</if>
            <if test="paymentMethod != null">payment_method = #{paymentMethod},</if>
            <if test="transactionType != null">transaction_type = #{transactionType},</if>
            <if test="transactionTime != null">transaction_time = #{transactionTime},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where transaction_id = #{transactionId}
    </update>

    <delete id="deleteAlseWalletTransactionByTransactionId" parameterType="Long">
        delete from alse_wallet_transaction where transaction_id = #{transactionId}
    </delete>

    <delete id="deleteAlseWalletTransactionByTransactionIds" parameterType="String">
        delete from alse_wallet_transaction where transaction_id in
        <foreach item="transactionId" collection="array" open="(" separator="," close=")">
            #{transactionId}
        </foreach>
    </delete>
</mapper>